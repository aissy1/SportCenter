<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="PictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        cZzRWbToOZw4sOH5w5UxAAAAAElFTkSuQmCC
</value>
  </data>
</root>